[{"path":"https://dslc-io.github.io/tidytuesdayR/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Ellis Hughes Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"set-up-your-github-account","dir":"Articles","previous_headings":"","what":"Set up your GitHub account","title":"Curating a Dataset","text":"’ve never worked GitHub, don’t worry! ’s relatively easy, ’ll guide setup process. submit dataset, ’ll officially open-source contributor! Create GitHub account. ’s easy free! install.packages(\"usethis\") don’t already . Run usethis::create_github_token() set “Personal Access Token” GitHub. token authorize R session act behalf GitHub. mentioned usethis::create_github_token(), store token using gitcreds::gitcreds_set(). Run usethis::git_sitrep(). print lot information git setup. don’t need set anything “GitHub project” section report, check issues, resolve recommended {usethis}.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"wrangle","dir":"Articles","previous_headings":"","what":"Wrangle","title":"Curating a Dataset","text":"try provide datasets one tidy tibbles can saved CSV files. ensures data easy learners access, regardless tools might use. Fully teaching step beyond scope vignette. R Data Science excellent resource help preparation tidy data. However wrangle data, need single file, cleaning.R, show users turned raw dataset tidy dataset. Use tt_clean() create open file. default, cleaning.R (files create process) created tt_submission directory working directory. like create submission different directory, provide path argument tt_clean(). example cleaning.R script look like, imagine want use built-state.x77 dataset {datasets} package. cleaning.R file might look like . Please library() packages used script top script make easier learners see might need install. addition {tidyverse}, often use {janitor} clean column names. required, usually try cast numeric variables “actual” class (integer, logical, date, etc, necessarily leaving “double” class many datasets use default). way users can see little information expect column. sure execute code (ideally fresh R session ensure works expected) moving Save & document step.","code":"tt_clean() library(tidyverse) library(janitor)  states <- state.x77 |>    tibble::as_tibble(rownames = \"state\") |>    janitor::clean_names() |>    dplyr::mutate(     dplyr::across(       c(\"population\", \"income\", \"frost\", \"area\"),       as.integer     )   )"},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"save-document","dir":"Articles","previous_headings":"","what":"Save & document","title":"Curating a Dataset","text":"Use tt_save_dataset() save wrangled dataset csv file, create formatted dictionary markdown file dataset. Running code creates two files tt_submission directory: states.csv states.md. .md file contains formatted data dictionary table dataset, opened can provide information column. Provide information users can understand column represents. Notice don’t perfectly align | characters table. Repeat process dataset wrangled.","code":"tt_save_dataset(states) |variable   |class     |description                           | |:----------|:---------|:-------------------------------------| |state      |character |Describe this field in sentence case. | |population |integer   |Describe this field in sentence case. | |income     |integer   |Describe this field in sentence case. | |illiteracy |double    |Describe this field in sentence case. | |life_exp   |double    |Describe this field in sentence case. | |murder     |double    |Describe this field in sentence case. | |hs_grad    |double    |Describe this field in sentence case. | |frost      |integer   |Describe this field in sentence case. | |area       |integer   |Describe this field in sentence case. | |variable   |class     |description                           | |:----------|:---------|:-------------------------------------| |state      |character |Name of the state. | |population |character |Population estimate as of July 1, 1975. | |income     |integer   |Per capita income in 1974. | |illiteracy |integer   |Illiteracy in 1970, as percent of population. | |life_exp   |double    |Life expectancy in years (1969–71). | |murder     |double    |Murder and non-negligent manslaughter rate per 100,000 population in 1976. | |hs_grad    |double    |Percent high-school graduates in 1970. | |frost      |integer   |Mean number of days with minimum temperature below freezing (1931–1960) in capital or large city. | |area       |integer   |Land area in square miles. |"},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"introduce","dir":"Articles","previous_headings":"","what":"Introduce","title":"Curating a Dataset","text":"Next need introduce dataset. Create intro.Rmd file tt_submission directory tt_intro(). file looks like : Fill DESCRIPTION, QUOTE SOURCE, QUESTION? sections information dataset. states dataset, might end something like :","code":"tt_intro() <!--  1. Describe the dataset. See previous weeks for the general format of the DESCRIPTION. The description is the part of the readme.md file above \"The Data\"; everything else will be filled in automatically. We usually include brief  introduction along the lines of \"This week we're exploring DATASET\" or \"The  dataset this week comes from SOURCE\", then a quote starting with \">\", then a few  questions participants might seek to answer using the data.  2. Delete this comment block. --> DESCRIPTION  > QUOTE FROM THE SOURCE  QUESTION? This week we're exploring data about the 50 states of the United States of America! The data this week comes from the U.S. Department of Commerce, Bureau of the Census (1977) *Statistical Abstract of the United States* and *County and City Data Book* via the core R {datasets} package.  > Data sets related to the 50 states of the United States of America. Note that all data are arranged according to alphabetical order of the state names.  - Is there a relationship between income and illiteracy? - Which states had the highest population density in 1975? Which states had the lowest?"},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"find-images","dir":"Articles","previous_headings":"","what":"Find images","title":"Curating a Dataset","text":"need least one image include social media posts dataset. images might come source dataset, might create . states data, ’ll create basic map united states states colored population.","code":"library(tidyverse) state_outlines <- ggplot2::map_data(\"state\") states |>    dplyr::select(state, population) |>   dplyr::mutate(region = tolower(state)) |>    dplyr::left_join(state_outlines, by = \"region\") |>    ggplot(aes(long, lat, group = state, fill = population)) +   geom_polygon() +   coord_map() +   theme_void() ggsave(   usethis::proj_path(\"tt_submission\", \"states_population.png\"),   width = 5, height = 3, units = \"in\",   bg = \"white\" )"},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"provide-metadata","dir":"Articles","previous_headings":"","what":"Provide metadata","title":"Curating a Dataset","text":"final preparation step provide metadata dataset. Create meta.yaml file tt_submission directory tt_meta(). interactive session, function ask questions pre-fill metadata file, open can confirm everything looks right. can also provide data directly function (), skip Q&. Notice social media links formatted @username cases except Mastodon, requires @username@server. completed meta.yaml file looks like (edited image alt text read without scrolling, otherwise tt_meta() produced):","code":"tt_meta(   title = \"The 50 US States\",   article_title = \"U.S. Department of Commerce, Bureau of the Census\",   article_url = \"https://www.census.gov/\",   source_title = \"The R datasets package\",   source_url = \"https://www.r-project.org/\",   image_filename = \"states_population.png\",   image_alt = \"A map of the continental United States, with each state colored in shades of blue by population as of 1975. California and New York are the lightest, indicating the highest population. Maine, New Hampshire, Vermont, and the Plains States are all quite dark, indicating low population.\",   attribution = \"Jon Harmon, Data Science Learning Community\",   github = \"jonthegeek\",   bluesky = \"jonthegeek.com\",   linkedin = \"jonthegeek\",   mastodon = \"fosstodon.org/@jonthegeek\" ) title: \"The 50 US States\" article:   title: \"U.S. Department of Commerce, Bureau of the Census\"   url: \"https://www.census.gov/\" data_source:   title: \"The R datasets package\"   url: \"https://www.r-project.org/\" images: # Please include at least one image, and up to three images - file: \"states_population.png\"   alt: >     A map of the continental United States, with each state colored in shades of     blue by population as of 1975. California and New York are the lightest,     indicating the highest population. Maine, New Hampshire, Vermont, and the     Plains States are all quite dark, indicating low population. credit:   post: \"Jon Harmon, Data Science Learning Community\"   github: \"@jonthegeek\"   bluesky: \"@jonthegeek.com\"   linkedin: \"@jonthegeek\"   mastodon: \"@jonthegeek@fosstodon.org\""},{"path":"https://dslc-io.github.io/tidytuesdayR/articles/curating.html","id":"submit","dir":"Articles","previous_headings":"","what":"Submit","title":"Curating a Dataset","text":"submission prepared, please submit review! haven’t already done , sure Set GitHub account. ’s ready, use tt_submit() submit dataset pull request (PR) TidyTuesday GitHub repo. PR way suggest changes repository (collection files GitHub), ’s manage submissions TidyTuesday. ’re requesting “pull” changes copy GitHub source repository. Congratulations! now open-source contributor!","code":"tt_submit()"},{"path":"https://dslc-io.github.io/tidytuesdayR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer. Ellis Hughes. Author. Thomas Mock. Contributor. Data Science Learning Community. Data contributor.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J, Hughes E (2025). tidytuesdayR: Access Weekly 'TidyTuesday' Project Dataset. R package version 1.1.2.9000, https://github.com/dslc-io/tidytuesdayR, https://dslc-io.github.io/tidytuesdayR/.","code":"@Manual{,   title = {tidytuesdayR: Access the Weekly 'TidyTuesday' Project Dataset},   author = {Jon Harmon and Ellis Hughes},   year = {2025},   note = {R package version 1.1.2.9000,     https://github.com/dslc-io/tidytuesdayR},   url = {https://dslc-io.github.io/tidytuesdayR/}, }"},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"tidytuesdayr-","dir":"","previous_headings":"","what":"Access the Weekly TidyTuesday Project Dataset","title":"Access the Weekly TidyTuesday Project Dataset","text":"tidytuesdayR makes easy participate weekly #TidyTuesday project providing functions quickly import data posted Tidy Tuesday repository.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access the Weekly TidyTuesday Project Dataset","text":"package (usually) available CRAN via: get latest -development features, install development version GitHub:","code":"install.packages(\"tidytuesdayR\") #install.packages(\"pak\") pak::pak(\"dslc-io/tidytuesdayR\")"},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Access the Weekly TidyTuesday Project Dataset","text":"currently two methods access data respository.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"load-the-data","dir":"","previous_headings":"Usage","what":"Load the Data!","title":"Access the Weekly TidyTuesday Project Dataset","text":"simplest way use tt_load() function. function accepts two types inputs determine data grab. can date string YYYY-MM-DD format like . function can accept year first argument, week year second. tt_load() naively downloads data available stores resulting tt_data object. access data, use $ [[ notation name dataset. view readme, either print tt_data object use readme() function. print tt_data object, also get available datasets names printed console.","code":"library(tidytuesdayR) tt_data <- tt_load(\"2019-01-15\") tt_data <- tt_load(2019, week=3) tt_data$agencies tt_data[[\"agencies\"]] readme(tt_data) print(tt_data) ## Available Datasets: ##  agencies  ##  launches  ##"},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"tidytemplate","dir":"","previous_headings":"Usage","what":"TidyTemplate","title":"Access the Weekly TidyTuesday Project Dataset","text":"part goal making participating #TidyTuesday easier, {tidytuesdayR} now also provides template! use , just use use_tidytemplate() function! default, template assume using recent TidyTuesday. However, can pass date object character string YYYY-MM-DD format defining different date want use. don’t recall exact date, worries, can use tt_available() function figure date get date use! Additionally, default template create new file working directory, using “YYYY_MM_DD” format per good practices. However, inclined, can rename whatever wish.","code":"## this weeks TidyTuesday! tidytuesdayR::use_tidytemplate()  ## TidyTuesday from Week 42 of 2019 tidytuesdayR::use_tidytemplate(refdate = \"2019-10-15\") tidytuesdayR::use_tidytemplate(name = \"My Super Great TidyTuesday.Rmd\")"},{"path":"https://dslc-io.github.io/tidytuesdayR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Access the Weekly TidyTuesday Project Dataset","text":"Please note ‘tidytuesdayR’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/gh_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from the tt github repo. — gh_get","title":"Get data from the tt github repo. — gh_get","text":"Get data tt github repo.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/gh_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from the tt github repo. — gh_get","text":"","code":"gh_get(path, auth = gh::gh_token(), ...)"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/gh_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from the tt github repo. — gh_get","text":"path Path within rfordatascience/tidytuesday repo. auth GitHub token. See gh::gh_token() details. ... Additional parameters passed gh::gh().","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/gh_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data from the tt github repo. — gh_get","text":"GitHub response parsed gh::gh().","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/last_tuesday.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the most recent tuesday — last_tuesday","title":"Find the most recent tuesday — last_tuesday","text":"Identify recent 'TidyTuesday' date relative specified date.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/last_tuesday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the most recent tuesday — last_tuesday","text":"","code":"last_tuesday(date = today(tzone = \"America/New_York\"))"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/last_tuesday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the most recent tuesday — last_tuesday","text":"date date date object character string YYYY-MM-DD format. Defaults today's date.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/last_tuesday.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the most recent tuesday — last_tuesday","text":"TidyTuesday date week specified date, using Monday start week.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/last_tuesday.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the most recent tuesday — last_tuesday","text":"","code":"last_tuesday() # get last Tuesday relative to today's date #> [1] \"2025-01-14\" last_tuesday(\"2020-01-01\") # get last Tuesday relative to a specified date #> [1] \"2019-12-31\""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/prep_tt_curate.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up a directory for dataset curation — prep_tt_curate","title":"Set up a directory for dataset curation — prep_tt_curate","text":"Set directory dataset curation","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/prep_tt_curate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up a directory for dataset curation — prep_tt_curate","text":"","code":"prep_tt_curate(path = \"tt_submission\", ignore = FALSE)"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/prep_tt_curate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up a directory for dataset curation — prep_tt_curate","text":"path relative path directory hold submission files (tt_submission default). directory exist, created. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/prep_tt_curate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up a directory for dataset curation — prep_tt_curate","text":"resolved path (invisibly).","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/printing.html","id":null,"dir":"Reference","previous_headings":"","what":"print methods of the tt objects — print.tt_data","title":"print methods of the tt objects — print.tt_data","text":"tidytuesdayR nice print methods objects used download store data TidyTuesday repo. always print available datasets/files. readme available, try display TidyTuesday readme.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/printing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print methods of the tt objects — print.tt_data","text":"","code":"# S3 method for class 'tt_data' print(x, ...)  # S3 method for class 'tt' print(x, ...)"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/printing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print methods of the tt objects — print.tt_data","text":"x tt_data tt object ... arguments passed methods.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/printing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print methods of the tt objects — print.tt_data","text":"x, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/printing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print methods of the tt objects — print.tt_data","text":"","code":"if (FALSE) { # interactive() tt <- tt_load_gh(\"2019-01-15\") print(tt)  tt_data <- tt_download(tt, files = \"All\") print(tt_data) }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Readme HTML maker and Viewer — readme","title":"Readme HTML maker and Viewer — readme","text":"Readme HTML maker Viewer","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Readme HTML maker and Viewer — readme","text":"","code":"readme(tt)"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Readme HTML maker and Viewer — readme","text":"tt tt_data object printing","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Readme HTML maker and Viewer — readme","text":"Null, invisibly. Used show readme downloaded TidyTuesday dataset Viewer.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Readme HTML maker and Viewer — readme","text":"","code":"if (FALSE) { # interactive() if (rate_limit_check(quiet = TRUE) > 30) {   tt_output <- tt_load_gh(\"2019-01-15\")   readme(tt_output) } }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/shared-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters used in multiple functions — shared-params","title":"Parameters used in multiple functions — shared-params","text":"Reused parameter definitions gathered easier editing.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/shared-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters used in multiple functions — shared-params","text":"auth GitHub token. See gh::gh_token() details. files file names download. Default \"\" downloads files specified week. path relative path directory hold submission files (tt_submission default). directory exist, created. tt tt object, output tt_load_gh(). week week number use within given year. used x valid year. x date data pull (\"YYYY-MM-dd\" format), four-digit year number. year year TidyTuesday use","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/should_update_tt_master_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Decide whether to update the master file — should_update_tt_master_file","title":"Decide whether to update the master file — should_update_tt_master_file","text":"Decide whether update master file","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/should_update_tt_master_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decide whether to update the master file — should_update_tt_master_file","text":"","code":"should_update_tt_master_file(force = FALSE, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/should_update_tt_master_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decide whether to update the master file — should_update_tt_master_file","text":"force force update occur even SHA matches auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/should_update_tt_master_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decide whether to update the master file — should_update_tt_master_file","text":"Boolean indicating whether master file updated.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tidytuesdayR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidytuesdayR: Access the Weekly 'TidyTuesday' Project Dataset — tidytuesdayR-package","title":"tidytuesdayR: Access the Weekly 'TidyTuesday' Project Dataset — tidytuesdayR-package","text":"'TidyTuesday' project 'Data Science Learning Community' post weekly dataset public data repository (https://github.com/rfordatascience/tidytuesday) people analyze visualize. package provides tools easily download data description source.","code":""},{"path":[]},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tidytuesdayR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidytuesdayR: Access the Weekly 'TidyTuesday' Project Dataset — tidytuesdayR-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID) Authors: Ellis Hughes ellishughes@live.com contributors: Thomas Mock j.thomasmock@gmail.com [contributor] Data Science Learning Community tidytuesday@dslc.io [data contributor]","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Listing all available TidyTuesdays — tt_available","title":"Listing all available TidyTuesdays — tt_available","text":"TidyTuesday project constantly growing repository data sets. Knowing type data available week requires going source. However, one hallmarks 'tidytuesdayR' never leave R console. functions created help maintain philosophy.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Listing all available TidyTuesdays — tt_available","text":"","code":"tt_available(auth = gh::gh_token())  tt_datasets(year, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Listing all available TidyTuesdays — tt_available","text":"auth GitHub token. See gh::gh_token() details. year year TidyTuesday use","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Listing all available TidyTuesdays — tt_available","text":"tt_available() returns tt_dataset_table_list, list tt_dataset_table. class special printing methods show available data sets. tt_datasets() returns tt_dataset_table object. class special printing methods show available datasets year.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Listing all available TidyTuesdays — tt_available","text":"find available datasets specific year, user can use function tt_datasets(). function either populate Viewer print console available data sets week/date associated . get whole list data sets ever released TidyTuesday, function tt_available() created. function either populate Viewer print console available data sets ever made TidyTuesday.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Listing all available TidyTuesdays — tt_available","text":"","code":"if (FALSE) { # interactive() # check to make sure there are requests still available if (rate_limit_check(quiet = TRUE) > 30) {   ## show data available from 2018   tt_datasets(2018)    ## show all data available ever   tt_available() } }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate valid TidyTuesday URL — tt_check_date","title":"Generate valid TidyTuesday URL — tt_check_date","text":"Given multiple types inputs, generate valid TidyTuesday URL.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate valid TidyTuesday URL — tt_check_date","text":"","code":"tt_check_date(x, week = NULL, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate valid TidyTuesday URL — tt_check_date","text":"x date data pull (\"YYYY-MM-dd\" format), four-digit year number. week week number use within given year. used x valid year. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and open cleaning.R — tt_clean","title":"Create and open cleaning.R — tt_clean","text":"first step curating TidyTuesday dataset cleaning data. function creates simple cleaning.R file specified path, (possible) opens editing.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and open cleaning.R — tt_clean","text":"","code":"tt_clean(   path = \"tt_submission\",   open = rlang::is_interactive(),   ignore = FALSE )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and open cleaning.R — tt_clean","text":"path relative path directory hold submission files (tt_submission default). directory exist, created. open Open newly created file editing? Happens RStudio, applicable, via utils::file.edit() otherwise. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and open cleaning.R — tt_clean","text":"logical vector indicating whether file created modified, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and open cleaning.R — tt_clean","text":"","code":"if (FALSE) { # interactive()    tt_clean() }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get TidyTuesday readme and list of files and HTML based on the date — tt_compile","title":"Get TidyTuesday readme and list of files and HTML based on the date — tt_compile","text":"Get TidyTuesday readme list files HTML based date","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_compile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get TidyTuesday readme and list of files and HTML based on the date — tt_compile","text":"","code":"tt_compile(date, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get TidyTuesday readme and list of files and HTML based on the date — tt_compile","text":"date date TidyTuesday interest auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get date of TidyTuesday, given the year and week — tt_date","title":"Get date of TidyTuesday, given the year and week — tt_date","text":"Sometimes know date want, know week. function provides ability pass year week interested get correct date","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get date of TidyTuesday, given the year and week — tt_date","text":"","code":"tt_date(year, week = NULL, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get date of TidyTuesday, given the year and week — tt_date","text":"year year TidyTuesday use week week number use within given year. used x valid year. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download TidyTuesday data — tt_download","title":"Download TidyTuesday data — tt_download","text":"Download specific files identified TidyTuesday dataset.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download TidyTuesday data — tt_download","text":"","code":"tt_download(tt, files = \"All\", ..., auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download TidyTuesday data — tt_download","text":"tt tt object, output tt_load_gh(). files file names download. Default \"\" downloads files specified week. ... Additional parameters pass parsing functions. Note: arguments passed filetypes. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download TidyTuesday data — tt_download","text":"list tibbles downloaded files.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download TidyTuesday data — tt_download","text":"","code":"if (FALSE) { # interactive() # Get the list of files for a week. tt_output <- tt_load_gh(\"2019-01-15\")  # Download a specific file. agencies <- tt_download(tt_output, files = \"agencies.csv\") }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a TidyTuesday dataset file — tt_download_file","title":"Download a TidyTuesday dataset file — tt_download_file","text":"Download actual data file TidyTuesday github repository.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a TidyTuesday dataset file — tt_download_file","text":"","code":"tt_download_file(tt, x, ..., auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a TidyTuesday dataset file — tt_download_file","text":"tt tt object, output tt_load_gh(). x Index name file download. ... Additional parameters pass parsing functions. Note: arguments passed filetypes. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a TidyTuesday dataset file — tt_download_file","text":"tibble containing contents file downloaded git","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_download_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a TidyTuesday dataset file — tt_download_file","text":"","code":"if (FALSE) { # interactive() tt_gh <- tt_load_gh(\"2019-01-15\")  agencies <- tt_download_file(tt_gh, 1) launches <- tt_download_file(tt_gh, \"launches.csv\") }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_intro.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and open intro.Rmd — tt_intro","title":"Create and open intro.Rmd — tt_intro","text":"curating TidyTuesday dataset, need introduce dataset. function creates simple intro.Rmd file specified path, (possible) opens editing.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_intro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and open intro.Rmd — tt_intro","text":"","code":"tt_intro(   path = \"tt_submission\",   open = rlang::is_interactive(),   ignore = FALSE )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_intro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and open intro.Rmd — tt_intro","text":"path relative path directory hold submission files (tt_submission default). directory exist, created. open Open newly created file editing? Happens RStudio, applicable, via utils::file.edit() otherwise. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_intro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and open intro.Rmd — tt_intro","text":"logical vector indicating whether file created modified, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_intro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and open intro.Rmd — tt_intro","text":"","code":"if (FALSE) { # interactive()    tt_intro() }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load TidyTuesday data from Github — tt_load","title":"Load TidyTuesday data from Github — tt_load","text":"Load TidyTuesday data Github","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load TidyTuesday data from Github — tt_load","text":"","code":"tt_load(x, week = NULL, files = \"All\", ..., auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load TidyTuesday data from Github — tt_load","text":"x date data pull (\"YYYY-MM-dd\" format), four-digit year number. week week number use within given year. used x valid year. files file names download. Default \"\" downloads files specified week. ... Additional parameters pass parsing functions. Note: arguments passed filetypes. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load TidyTuesday data from Github — tt_load","text":"tt_data object, contains data can accessed via $, readme week's TidyTuesday, can viewed printing object calling readme().","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load TidyTuesday data from Github — tt_load","text":"","code":"if (FALSE) { # interactive() tt_output <- tt_load(\"2019-01-15\") tt_output agencies <- tt_output$agencies }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load_gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Load TidyTuesday data from Github — tt_load_gh","title":"Load TidyTuesday data from Github — tt_load_gh","text":"Pulls readme URLs data TidyTuesday github folder based date provided","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load_gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load TidyTuesday data from Github — tt_load_gh","text":"","code":"tt_load_gh(x, week = NULL, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load_gh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load TidyTuesday data from Github — tt_load_gh","text":"x date data pull (\"YYYY-MM-dd\" format), four-digit year number. week week number use within given year. used x valid year. auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load_gh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load TidyTuesday data from Github — tt_load_gh","text":"tt object. contains files available week, readme html, date TidyTuesday.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_load_gh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load TidyTuesday data from Github — tt_load_gh","text":"","code":"if (FALSE) { # interactive() # check to make sure there are requests still available if (rate_limit_check(quiet = TRUE) > 30) {   tt_gh <- tt_load_gh(\"2019-01-15\")   ## readme attempts to open the readme for the weekly dataset   readme(tt_gh)    agencies <- tt_download(     tt_gh,     files = \"agencies.csv\"   ) } }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_master_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Master List of Files from TidyTuesday — tt_master_file","title":"Get Master List of Files from TidyTuesday — tt_master_file","text":"Import update dataset github records entire list objects TidyTuesday","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_master_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Master List of Files from TidyTuesday — tt_master_file","text":"","code":"tt_master_file(force = FALSE, auth = gh::gh_token())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_master_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Master List of Files from TidyTuesday — tt_master_file","text":"force force update occur even SHA matches auth GitHub token. See gh::gh_token() details.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_master_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Master List of Files from TidyTuesday — tt_master_file","text":"tt master file, updated necessary.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and open meta.yaml — tt_meta","title":"Create and open meta.yaml — tt_meta","text":"need set metadata information TidyTuesday dataset. Use function set meta.yaml file submission. provide values parameters, prompted enter interactive session.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and open meta.yaml — tt_meta","text":"","code":"tt_meta(   path = \"tt_submission\",   title,   article_title,   article_url,   source_title,   source_url,   image_filename,   image_alt,   attribution,   github = gh::gh_whoami()$login,   bluesky = NULL,   linkedin = NULL,   mastodon = NULL,   open = rlang::is_interactive(),   ignore = FALSE )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and open meta.yaml — tt_meta","text":"path relative path directory hold submission files (tt_submission default). directory exist, created. title short title submission. fit sentence \"week exploring title!\" example, \"week exploring 50 US States!\", title \"50 US States\". article_title title article website something data. usually article uses describes dataset, related website acceptable. article_url URL article whose title article_title. source_title title source dataset. usually website, might R package journal article, example. source_url URL associated source. Ideally URL users can download data, , possible, provide URL somehow related source data. image_filename character vector least one file name image accompany post. might plot data, othe image somehow connected data. image_alt Text can take place image visually impaired user anybody else see image. just say \"plot data\", rather describe information can glean plot, \"map continental United States, state colored shades blue population 1975. California New York lightest, indicating highest population. Maine, New Hampshire, Vermont, Plains States quite dark, indicating low population.\" attribution name like appear credit post dataset. can include title /affiliation like, \"Jon Harmon, Executive Director, Data Science Learning Community\". github GitHub username, link profile GitHub. bluesky Bluesky username, link profile Bluesky. Leave NULL wish credited Bluesky. linkedin LinkedIn username, link profile LinkedIn Leave NULL wish credited LinkedIn. mastodon mastodon server username, link profile mastodon server. Leave NULL wish credited Mastodon. open Open newly created file editing? Happens RStudio, applicable, via utils::file.edit() otherwise. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and open meta.yaml — tt_meta","text":"logical vector indicating whether file created modified, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and open meta.yaml — tt_meta","text":"","code":"if (FALSE) { # interactive()    tt_meta() }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Utilities for Listing Available Datasets — tt_print","title":"Printing Utilities for Listing Available Datasets — tt_print","text":"printing utilities showing available datasets specific year time","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Utilities for Listing Available Datasets — tt_print","text":"","code":"# S3 method for class 'tt_dataset_table' print(x, ..., is_interactive = interactive())  # S3 method for class 'tt_dataset_table_list' print(x, ..., is_interactive = interactive())"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Utilities for Listing Available Datasets — tt_print","text":"x object used select method. ... arguments passed methods. is_interactive Whether function used interactively.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing Utilities for Listing Available Datasets — tt_print","text":"x, invisibly","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Utilities for Listing Available Datasets — tt_print","text":"","code":"if (FALSE) { # interactive() # check to make sure there are requests still available if (rate_limit_check(quiet = TRUE) > 30) {   available_datasets_2018 <- tt_datasets(2018)   print(available_datasets_2018)    all_available_datasets <- tt_available()   print(all_available_datasets) } }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_save_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Save datasets for submission — tt_save_dataset","title":"Save datasets for submission — tt_save_dataset","text":"Datasets TidyTuesday submissions saved specific format, accompanying data dictionary dataset_name.md file. function saves dataset CSV file submission directory, creates data dictionary file fill . interactive session, dictionary file opened editing.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_save_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save datasets for submission — tt_save_dataset","text":"","code":"tt_save_dataset(   dataset,   path = \"tt_submission\",   dataset_name = rlang::caller_arg(dataset),   open = rlang::is_interactive(),   ignore = FALSE )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_save_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save datasets for submission — tt_save_dataset","text":"dataset clean dataset save. dataset must data.frame. path relative path directory hold submission files (tt_submission default). directory exist, created. dataset_name name save dataset . default, name dataset variable used. open Open newly created file editing? Happens RStudio, applicable, via utils::file.edit() otherwise. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_save_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save datasets for submission — tt_save_dataset","text":"logical vector indicating whether file created modified, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_save_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save datasets for submission — tt_save_dataset","text":"","code":"if (FALSE) { # interactive()    tt_save_dataset(mtcars) }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit a TidyTuesday dataset — tt_submit","title":"Submit a TidyTuesday dataset — tt_submit","text":"Submit curated dataset review uploading GitHub creating pull request. dataset prepared using tt_clean(), tt_save_dataset(), tt_intro(), tt_meta().","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit a TidyTuesday dataset — tt_submit","text":"","code":"tt_submit(   path = \"tt_submission\",   auth = gh::gh_token(),   open = rlang::is_interactive() )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit a TidyTuesday dataset — tt_submit","text":"path relative path directory hold submission files (tt_submission default). directory exist, created. auth GitHub token. See gh::gh_token() details. open Whether open pull request browser. Defaults TRUE interactive session.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit a TidyTuesday dataset — tt_submit","text":"URL pull request, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/tt_submit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit a TidyTuesday dataset — tt_submit","text":"","code":"if (FALSE) { # interactive() # First set up a dataset in the \"tt_submission\" folder. tt_submit() }"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/use_tidytemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and open the tidytemplate — use_tidytemplate","title":"Create and open the tidytemplate — use_tidytemplate","text":"Use tidytemplate Rmd starting analysis leg processing","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/use_tidytemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and open the tidytemplate — use_tidytemplate","text":"","code":"use_tidytemplate(   name = NULL,   open = rlang::is_interactive(),   refdate = today(),   ignore = FALSE )"},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/use_tidytemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and open the tidytemplate — use_tidytemplate","text":"name name generated TidyTuesday analysis Rmd, \"My_TidyTuesday.Rmd\". open Open newly created file editing? Happens RStudio, applicable, via utils::file.edit() otherwise. refdate Date use reference determine TidyTuesday use template. Either date object character string YYYY-MM-DD format. ignore newly created file added .Rbuildignore?","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/use_tidytemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and open the tidytemplate — use_tidytemplate","text":"logical vector indicating whether file created modified, invisibly.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/reference/use_tidytemplate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and open the tidytemplate — use_tidytemplate","text":"","code":"if (FALSE) { # interactive()    use_tidytemplate(name = \"My_Awesome_TidyTuesday.Rmd\") }"},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-development-version","dir":"Changelog","previous_headings":"","what":"tidytuesdayR (development version)","title":"tidytuesdayR (development version)","text":"[feature] Added functions tt_clean(), tt_save_dataset(), tt_intro(), tt_meta(), tt_submit() curation submission datasets use TidyTuesday. See vignette(\"curating\", package = \"tidytuesdayR\") details. [bug fix] use_tidytemplate() now explicitly takes ignore argument, rather passing (almost entirely overruled) ... usethis::use_template(). (#76) [bug fix] Attempting load data particularly strange, early weeks (2018 weeks 7 8) now errors informatively. (#90) [maintenance] Language package officially declared DESCRIPTION “en-US”.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-112","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 1.1.2","title":"tidytuesdayR 1.1.2","text":"CRAN release: 2024-09-09 [maintenance] tidytuesdayR now uses {gh} package manage interactions GitHub API. make package stable easier maintain. (#78) [maintenance] tidytuesdayR now maintained Data Science Learning Community.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-103","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 1.0.3","title":"tidytuesdayR 1.0.3","text":"CRAN release: 2023-12-13 [bug fix] Address case rate limit hit trying test","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-102","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 1.0.2","title":"tidytuesdayR 1.0.2","text":"CRAN release: 2022-02-01 [bug fix] testing identified 502 errors github servers cause code error . Now retry times giving error. [bug fix] internet connection bug rstudio resolved due malformed url checks (https). [bug fix] Partial argument matching correction tt_download_file.character(), tt_parse_blob(), tests. (thanks @mgirlich)","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-101","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 1.0.1","title":"tidytuesdayR 1.0.1","text":"CRAN release: 2020-07-10 [feature] Provide template Rmd users, populated date proper tt_load call [bug fix] CRAN Solaris build, 🔗(link) emoji caused issues. Added fix change encoding native. [bug fix] tt_available() printed twice. corrected.","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-100","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 1.0.0","title":"tidytuesdayR 1.0.0","text":"CRAN release: 2020-06-26 Massive update internals tidytuesdayR [feature] allow using authentication using github PAT’s finer control downloading files via download_files argument tt_load() internal functions now use GET arguments use github API","code":""},{"path":"https://dslc-io.github.io/tidytuesdayR/news/index.html","id":"tidytuesdayr-022","dir":"Changelog","previous_headings":"","what":"tidytuesdayR 0.2.2","title":"tidytuesdayR 0.2.2","text":"Added NEWS.md file track changes package. Major updates better documentation","code":""}]
